<html>
<head>
</head>
<body>
  
  <!-- AJS is a strict superset of javascript, so require 
       and variable assignment work as expected -->
  
  <% var _ = require('underscore')
   , async2 = function() { %>
  <div><%= 'async 2 done' %></div>
  <% } %>
  
  <% if(false) { %>
  <h1>Hidden.</h1>
  <% } %>

  <% if(true) { %>
  <h1>Hello world.</h1>
  <% } %>

  <!-- callbacks are flushed to the proper location in the template
       when they return, but callbacks can't be nested -->
       
  <p>
    <% setTimeout(function() { %>
    <%= 'async 1 done' %>
    <% }, 2000 ) %>
  </p>
  
  <!-- underscore.js functions are exempt from the
       nested callback restriction. -->
  
  <ul>
    <% _.each(['one', 'two', 'three'], function(item) { %>
      <% _.each(['one2', 'two2', 'three2'], function(item2) { %>
      <li><%= item %></li>
      <li><%= item2 %></li>
      <% }); %>
    <% }); %>
  </ul>
  
  <!-- named callback functions work too. -->
  
  <p>
    <% setTimeout(async2, 200) %>
  </p>

  <!-- callbacks can be used multiple times -->
  
  <% setTimeout(async2, 200) %>
  
  <!-- other AJS partials can be embedded using the "include" function -->
  
  <% include('includes/two') %>
  
  <p><%= 'any statement can be written to the template - ' + (6 + 6) %></p>
</body>
</html>
